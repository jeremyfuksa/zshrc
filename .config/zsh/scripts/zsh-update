#!/bin/bash

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Print with color
print_color() {
    echo -e "${2}${1}${NC}"
}

# Check if running as root
if [ "$EUID" -eq 0 ]; then
    print_color "Please do not run as root" "$RED"
    exit 1
fi

# Backup function
backup_config() {
    local backup_dir="$HOME/.config/zsh/backups"
    local timestamp=$(date +%Y%m%d_%H%M%S)
    
    print_color "Creating backup..." "$BLUE"
    mkdir -p "$backup_dir"
    
    # Backup .zshrc
    if [ -f "$HOME/.zshrc" ]; then
        cp "$HOME/.zshrc" "$backup_dir/zshrc_$timestamp.bak"
    fi
    
    # Backup config directory
    if [ -d "$HOME/.config/zsh" ]; then
        tar -czf "$backup_dir/zsh_config_$timestamp.tar.gz" -C "$HOME/.config" zsh
    fi
    
    print_color "Backup created in $backup_dir" "$GREEN"
}

# Update function
update_zsh() {
    local zsh_dir="$HOME/.config/zsh"
    
    # Check if we're in the right directory
    if [ ! -d "$zsh_dir" ]; then
        print_color "ZSH configuration directory not found at $zsh_dir" "$RED"
        exit 1
    fi
    
    # Create backup before updating
    backup_config
    
    # Change to the zsh directory
    cd "$zsh_dir" || exit 1
    
    # Pull latest changes
    print_color "Pulling latest changes..." "$BLUE"
    if ! git pull origin main; then
        print_color "Failed to pull latest changes" "$RED"
        exit 1
    fi
    
    # Make install script executable
    print_color "Updating installation..." "$BLUE"
    chmod +x install.sh
    
    # Run installation script
    if ! ./install.sh; then
        print_color "Installation failed" "$RED"
        exit 1
    fi
    
    print_color "\nUpdate complete! ðŸŽ‰" "$GREEN"
    print_color "Please restart your terminal or run 'source ~/.zshrc' to apply changes." "$YELLOW"
}

# Main execution
update_zsh 
